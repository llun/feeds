{"title":"@llun story","description":"Life, Ride and Code","link":"https://www.llun.me","updatedAt":1678167196677,"generator":"@llun","entries":[{"title":"Mastodon timeline","link":"https://www.llun.me/posts/dev/2023-02-12-mastodon-timeline","date":1676227207000,"content":"<p>One of the tricky thing in the Mastodon is the timeline and there are a few timelines inside the service, actor public timeline, notification timeline, main timeline, etc. This note is about main timeline.</p>\n<p>The main timeline is the list of Notes, Boosts (and Poll if supported) that shows up after logging in. I thought it's simple just grab all the following people statuses and show it in chronological and that's it. However there are few things that needs to include</p>\n<ol>\n<li>What's happen to the status that reply but actor is not following to the actor status, should it include too?</li>\n<li>How about the non-following that reply to the following one?</li>\n<li>And the boost that the actor boost by themself, should it shows as Boost status again along with the original status that just get boosted?</li>\n<li>How about multiple boosted from different following but same status?</li>\n</ol>\n<figure><a href=\"timeline.png\" target=\"_blank\"><img src=\"https://www.llun.me/posts/dev/2023-02-12-mastodon-timeline/timeline-small.jpg\" alt /></a><figcaption>All messages that possible showing in timeline</figcaption></figure>\n<p>From those 4 items above, only the multiple boost I still showing multiple time in the main timeline, because it can be in the different time, e.g. First boost happen and follows by few statuses and the Second boost happen. It's a bit annoy when first boost and second boost happen next to each other but that can group in the client side.</p>\n<p>I was naively implement this by simple query get all the statuses that user follows and doesn't have reply. This made me miss a few replies because when the status has replies, it won't show on my timeline at all and I don't have a notification timeline yet in my instance.</p>\n<p>It took me sometime before I build a <a href=\"https://github.com/llun/activities.next/blob/main/lib/timelines/main.ts\" target=\"_blank\">new timeline</a> which will apply to all statuses that receive by instance and tag the timelines to it. This cause a few issues e.g. if the user unfollow, I will need to update all those timelines or rebuild it (which I don't do yet) or it can get slower when the instance has a lot of users.</p>\n<p>One way I think might help on this is, rebuilding the timeline every time when user open the page which might be the way that <a href=\"http://misskey.io\" target=\"_blank\">misskey.io</a> doing now because for the first load, it took a few seconds to show the timeline.</p>\n<p>I'm not sure which way is better yet, for the user experience loading the page, instant timeline is way better than taking few seconds like what <a href=\"http://misskey.io\" target=\"_blank\">misskey.io</a> doing now but this will revisit in another time.</p>\n","author":"Maythee Anegboonlap"},{"title":"Firestore","link":"https://www.llun.me/posts/dev/2023-01-29-firestore","date":1675000855000,"content":"<p><a href=\"https://github.com/llun/activities.next\" target=\"_blank\">ActivityPub server</a> I'm building is using Google Firestore as the database (it's also supporting SQL too but I mainly use Firestore now). It's a good opportunity to try it after staying with DynamoDB for a long time and almost using DynamoDB too but decided to try a new database.</p>\n<p>In DynamoDB, all data are store in column like a table, and if you want to separate the type of data, you can do in two ways, different column with index or different database altogether. Each has it own problems and benefits, using single table with different index make maintenance a bit simpler because you can do everything in single table but when the table is getting bigger and you have a lot of changes, indexing time increasing a lot and it can be days before you can use those index for query.</p>\n<p>Using multiple tables in DynamoDB makes schema changes easier but need tools to help maintaining different tables and schema (CloudFormation or Terraform)</p>\n<p>In Firestore, those problems are gone away, database has concept of collections and it can have multiple collections in single unit. Also, it doesn't have schema that needs to declare upfront before you can use the database, the index will generate automatically when you insert the data which is a lot easier compared to DynamoDB.</p>\n<p>Another thing that Firestore is more powerful than DynamoDB is, it can has sub-collections! So, instead of have only plain table (or indexes) for different type of data, those can be inside the document that already inside another collections. This make some structure and query a lot simples e.g. Status likes, that can store inside the status itself instead of having it own collection separately and have to query who own this Like, same as attachments.</p>\n<p>And the most powerful one of sub-collections is Google Firestore can query across those sub-collections by creating an <a href=\"https://firebase.blog/posts/2019/06/understanding-collection-group-queries\" target=\"_blank\">CollectionGroup index</a>, so, if I want to find how many likes or attachments by whom span across those statuses, it's still possible.</p>\n<p>One thing I hope that Firestore has is <code>OR</code> query condition. Currently if I want something to include more than one possibility, I have to do it with multiple queries and merge the result or add a new property that compute a result of or before and using that with index. Query multiple times makes pagination tricky because the number of items can be different per page, creating the index has an issue if something is updated affect the result of those index later (e.g. unfollowing/following cause the main timeline in ActivityPub changes)</p>\n<p>DynamoDB supports this but it also has some limitation when using it (similar to <code>array-contains</code> or <code>in</code> key word in Firestore) so I think this is equal point for both databases.</p>\n<p>Cost of both databases are cheap (but also can be expensive) and for personal use like single actor ActivityPub server, it can be free most of the time. With TTL that help cleaning the old data in both databases would be better too. I already need to pay for Firestore a little but that's because I need to change the schema after learning how the sub-collection works but it's still less than $1 USD, so doesn't hurt so much yet. Might need to see in long term when I have data more than a million records but that milestone seem very far away for now.</p>\n","author":"Maythee Anegboonlap"},{"title":"My wrong assumptions with ActivityPub","link":"https://www.llun.me/posts/dev/2023-01-07-my-wrong-assumptions-with-activity-pub","date":1673114484000,"content":"<p>While I'm building <a href=\"https://github.com/llun/activities.next\" target=\"_blank\">my ActivityPub server</a>, I went through a lot of wrong of Assumption that cause a few problems now, so this is a note about my mistakes while implementing it</p>\n<ol>\n<li>Actor id contains a username. Actor id is a URL or identifier of resource telling who doing it or own it. For Mastodon, it looks like this <code>https://server.tld/users/username</code>. So I assume that, it will alway have the user name in the last part which is totally wrong.<br />\n<br />\nRecently I tried to follow <a href=\"http://Misskey.io\" target=\"_blank\">Misskey.io</a> actor and found out <a href=\"http://Misskey.io\" target=\"_blank\">Misskey.io</a> <code>actorId</code> doesn't contain <code>username</code> but a random id in the end and to get the username, the request to actorId is required.</li>\n<li>To make mentions works, it has to put in tags too. The issue here is if the Note doesn't have Tag with mentions, although it can send to the recipient in Mastodon, but it won't shows as Mention on that side and won't have any notification telling the recipient that he got mentions too.</li>\n<li>Better to compact JSON input receives from other and also compact JSON output before sending out. At one point, I was moving all the ActivityStream context url to constant however, I also have a constant for public ActivityStream too which I use it wrong when I move the JSON output to it causing all my message cannot send out. It took me awhile to find out.</li>\n<li>Follower id is not alway in <code>https://server.tld/users/username/follower</code> format. This is the same issue as Actor id. I assume that follower id is alway <code>actorId</code> + <code>/follower</code> but it can be anything like <code>https://server.tld/follower/username</code> or something else. The URL is from the <code>actorId</code> result, follower property. I haven't fixed this issue yet, so my server will alway send the message out with wrong follower id for non-Mastodon server.</li>\n<li>User timeline contain only non-reply messages. This is another issue that I can't figure out yet how to display the main timeline. In the beginning, I just returns all the statuses that I receive because I thought it contains only statuses from whom I follow but in reality, it contains the statuses that those following got replies too which for some actor, it's a bit too much.<br />\n<br />\nSo, I reduce it to only status that original post by whom I'm following but this cause me missing some reply to myself. Now, I include the reply but it's also missing the status that reply to another reply but original status is my status which left me at this point.<br />\n<br />\nThe tricky part is, for Firebase, it's not just update the query to change the result but I have to construct the index to make the query work which can be expensive if this is growing.<br />\n<br />\nAnother issue is, if I unfollow the user, in Twitter, statuses from that user will disappear from the timeline which probably can do easily by joining the following users and status on SQL database but that's not true for Firebase. So, this is an another problem that I don't have a solution just yet. (Kind of have an idea e.g. update the local recipients when unfollow but that's still tricky and can be expensive)</li>\n</ol>\n<p>So, these are my major mistakes so far, my ActivityPub server is running quite fine now with few missing features but the main next two that I would like to add is boost and likes and I think that will cover a major functionality for ActivityPub.</p>\n","author":"Maythee Anegboonlap"},{"title":"2022","link":"https://www.llun.me/posts/2022-12-31-2022","date":1672479610000,"content":"<p>หลังจากปีสองปีก่อนอยู่ติดเกาะมาครบสองปี แล้วคิดว่าจะย้ายออกนอกสิงคโปร์ปีนี้ก็ได้<a href=\"/posts/2022-02-15-bye-singapore/\" target=\"_blank\">ย้ายจริง</a>เร็วกว่าที่คิดไว้มาก เป็นการย้ายประเทศที่ง่ายกว่าที่คิดไม่มีอะไรให้ต้องปวดหัวหรือต้องทำซักเท่าไหร่ ไม่เหมือนตอนย้ายไปสิงคโปร์ครั้งแรกที่ตอนนั้นเตรียมตัว วางแผนอะไรเยอะเต็มไปหมด รอบนี้บริษัทจ้างให้คนมาช่วยย้ายประเทศตั้งแต่ทำเอกสาร จนถึงหาบ้าน และที่พักชั่วคราวตั้งแต่ลงเครื่องบิน ทุกอย่างเสร็จย้ายเข้ามาอยู่บ้านที่เช่ากลางเมืองตั้งแต่สองอาทิตย์แรกที่มาถึง</p>\n<p>แต่ปีนี้ก็เป็นปีที่ป่วยหนักอีกแล้ว และใช้ประกันสุขภาพที่นี่คุ้มตั้งแต่ปีแรกเลย เพราะจักรยาน<a href=\"/posts/ride/2022-07-09-fall/\" target=\"_blank\">ล้มกลางปี</a>แล้วกระดูกแตก แบบไม่รู้ว่าล้มไปยังไง ได้เห็นถึงความโหดของ Apple Watch ที่เรียกรถพยาบาลมารับส่งให้ หลังจากหมดสติไป แขนโดนเข้าเฝือก อีกข้างโดนแขวนห้อยไม่ให้ขยับมากเพราะไหล่มีรอยแตก เรียกว่าแทบไม่ต้องทำอะไรเลยไปสองสัปดาห์ ปีหน้าก็หวังว่าจะไม่ป่วยเป็นอะไรอีกแล้ว แม้จะมีประกันก็เถอะ 🤞</p>\n<p>อย่างนึงที่คิดว่าได้ทำจนอิ่มปีนี้คือปั่นจักรยาน แม้จะบาดเจ็มแต่ก็ได้<a href=\"/tags/ride/netherlands/\" target=\"_blank\">ปั่นตั้งแต่เหนือจดใต้ Netherlands</a> ต้องขอบคุณสภาพอากาศปีนี้ที่แทบจะไม่มีฝนตกเลย เลยได้ปั่นทั้งปี แม้จะยังไม่ชินกับความเย็นของที่นี่ก็ตาม แต่ก็ไม่ต้องตื่นเช้าแล้วเหมือนตอนอยู่สิงคโปร์แล้ว เพราะอากาศไม่ร้อนและมีเลนส์จักรยานให้ปั่นแทบทั้งประเทศ ข้อเสียเดียวของที่นี่คงเป็นลม เพราะลมโหดกว่าสิงคโปร์มาก</p>\n<h2>Next.JS <a href=\"#next.js\" target=\"_blank\">#</a></h2>\n<p>ปีนี้ย้ายงานมา แล้วได้ทำเกี่ยวกับ Next.JS แบบจริงจังทั้งปี แล้วเจอปัญหาจุกจิกมากกว่าที่คิดมากตั้งแต่ Localisation จนถึง Middleware ที่ NextJS เปลี่ยนจาก nested middleware เป็น middleware กลางอันเดียว ปลายปียังมี Next.JS 13 ที่ออกมาใหม่แต่ลอง upgrade กับ project งานตอนที่พึ่งออกก็เจอปัญหา performance อีกจนต้องย้อนกลับมา Next.JS 12</p>\n<p>แต่นอกจากปัญหาจุกจิกที่เจอระหว่างทาง ระบบที่ทำอยู่ก็รู้สึกว่านิ่งดี ไม่ค่อยมีปัญหาอะไร และ Project ส่วนตัวที่ใช้ก็ไม่ค่อยมีปัญหาเหมือนกัน แต่ก็คิดอยู่ว่าจะเปลี่ยน framework ไปใช้อย่างอื่นที่ระบบ middleware ดีกว่านี้</p>\n<h2>ActivityPub/Mastodon <a href=\"#activitypub%2Fmastodon\" target=\"_blank\">#</a></h2>\n<p>สิ่งที่น่าตื่นเต้นที่สุดของปีนี้คือ Twitter ระเบิดทำลายตัวเอง จนทำให้ Mastodon/ActivityPub เป็น Social network ใหม่ที่น่าเล่นขึ้นมาทันที ปลายปีหลังจากลอง Server คนอื่นไปเรื่อยๆ แล้วก็เจอว่าคนย้ายมาเยอะจน Federate server เล็กๆ รับไม่ไหว และ server พวกนี้ไม่ได้มีคนดูแลเท่า Twitter แน่ๆ เลยคิดว่าจะสร้าง <a href=\"https://github.com/llun/activities.next\" target=\"_blank\">server ตัวเองแบบง่ายๆ</a> ขึ้นมา</p>\n<p>ตอนแรกก็คิดว่าจะลองลง Mastodon server เอาคิดว่าไม่น่าจะต้องลงอะไรมาก แต่แค่เจอว่าต้องใช้ทั้ง Redis ทั้ง Postgresql ก็ถอยก่อนหละ เพราะ maintain สองอย่างคนเดียวนี่เหนื่อย ไม่รวมเรื่อง cost อีกเลยคิดว่าเขียนใหม่เองดีกว่า ไม่น่าจะยาก <a href=\"https://www.w3.org/TR/activitystreams-vocabulary/\" target=\"_blank\">ActivityPub มี specs ทุกอย่าง!?</a> แล้วแต่ก็เจอว่ามันไม่ครอบคลุมอะไรจุกจิกอย่าง <a href=\"https://docs.joinmastodon.org/spec/security/#http\" target=\"_blank\">HTTP signature</a> ที่ไม่ได้อยู่ใน spec กลาง หรืออย่าง JSON-LD Signature ที่ Mastodon ใช้ก็ <a href=\"https://docs.joinmastodon.org/spec/security/#ld\" target=\"_blank\">outdated</a> แต่ Mastodon เองก็ไม่ได้ใช้ signature นี้ในการตรวจ document ระหว่าง server! ถ้า document ไม่มี property นี้</p>\n<p>ทำมาประมาณเดือน และใช้คุยกับคนอื่นมาซักพักแล้ว ก็คิดว่าใช้คุยกับ federate server อื่นได้แล้ว model น่าจะนิ่งหละ แต่ก็ยังเหลืออีกหลาย function ที่ยังไม่ได้ทำทั้งดึง status หลังจาก follow, boost, like คงอีกซักพักกว่าจะทำ function ครบรวมถึงแก้ timeline api ด้วย</p>\n<h2>2023 <a href=\"#2023\" target=\"_blank\">#</a></h2>\n<p>ปีหน้าก็หวังว่าจะไม่มี big change อย่างสองปีนี้แล้ว และคงพักมากกว่าปีนี้ รู้สึกสองปีนี้ย้ายงาน ย้ายประเทศจนเหนื่อยแล้ว ถ้าจะย้ายเยอะแบบช่วงนี้อีกคงอีกซักปีสองปี</p>\n","author":"Maythee Anegboonlap"},{"title":"Mastodon server with NextJS","link":"https://www.llun.me/posts/dev/2022-11-20-mastodon-server-with-nextjs","date":1668975796000,"content":"<p>In the last few weeks, I tried to get my Mastodon accounts for various servers, first with <a href=\"http://mas.to\" target=\"_blank\">mas.to</a> which is very unreliable lately, then glasgow.social which is also very unreliable in the first few days and the last few days end up in <a href=\"http://mastodon.in.th\" target=\"_blank\">mastodon.in.th</a>. Only issue with <a href=\"http://mastodon.in.th\" target=\"_blank\">mastodon.in.th</a> for me is, I live in the Netherlands, using the server in Thailand is a bit slower.</p>\n<p>Another issue with all these Mastodon servers is I don’t have control over my followers or any messages that I put in and with these unreliable issues I don’t feel my account on these small federate servers is safe also, moving account informations (followers, followings, messages etc) without needing to ask everyone is to control the domain and no federate server is supporting using your own domain now. (also no migration option if the server is going down, your mastodon account is gone)</p>\n<p>One option to solve this is setting up my Mastodon server, but with <a href=\"https://github.com/mastodon/mastodon#requirements\" target=\"_blank\">all these requirements</a> it’s not going to be easy, another option is <a href=\"https://docs-develop.pleroma.social/backend/installation/debian_based_en/\" target=\"_blank\">Pleroma</a> which is easier but still a lot of things to do.</p>\n<p>The good thing about Mastodon is, it’s using <a href=\"https://www.w3.org/TR/activitypub/\" target=\"_blank\">ActivityPub</a>, so I can just build something that is compatible with it and use something that is cheaper than those sql servers and that was what I did with this <a href=\"https://github.com/llun/activities.next\" target=\"_blank\">activities.next project</a>.</p>\n<p>The server is not really fully functional like Mastodon yet, it still lacks a lot of things e.g. reply, mention someone else, post an image and poll support etc. However, at this point, it can receive messages and send them to anyone who follows me already. It also supports follow and unfollow people. One thing I would like to add that Mastodon won’t support is supporting Actor domain name, so anyone that registers with this server can use any domain that points to it.</p>\n<h2>What is required to run this server <a href=\"#what-is-required-to-run-this-server\" target=\"_blank\">#</a></h2>\n<p>Two things currently,\nContainer?, AWS Lambda, Vercel or Cloud Function basically anything that can run Node.js as compute layer\nDatabase, currently it supports only Firebase and Sqlite3 (that I tested out but the query is built with Knex.js so technically, it should be able to be used with any SQL database with <a href=\"https://github.com/llun/activities.next/blob/main/migrations/20221110192701_init.ts\" target=\"_blank\">this schema</a>).</p>\n<h2>What next? <a href=\"#what-next%3F\" target=\"_blank\">#</a></h2>\n<p>My plan after this is\nMention and Reply\nOutbox timeline and pagination\nMain timeline query with proper to and cc\nMedia storage (via Apple Shared Album)\nMedia storage (via S3/GCS?)</p>\n<p>Currently, my main Mastodon account is <a href=\"https://llun.dev/@null\" target=\"_blank\">@null@llun.dev</a>, this can be followed from any Mastodon (or ActivityPub server) ping me there!</p>\n","author":"Maythee Anegboonlap"},{"title":"Infinite Scroll","link":"https://www.llun.me/posts/dev/2022-11-07-infinite-scroll","date":1667849188000,"content":"<p>แต่ก่อนเวลาทำ Infinite Scroll ท่าที่ทำกันส่วนใหญ่ในเว็บคือใข้ Scroll event แล้วดู scroll position ว่าถึงตำแหน่งที่ควรจะดึงข้อมูลหน้าถัดไปแล้วหรือยัง ซึ่งส่วนใหญ่จะเป็นเกือบๆ สุด list หรือที่ท้าย list ก็ได้แล้วแสดง UI ว่ากำลังโหลดข้อมูลช่วงต่อไป</p>\n\n  See the Pen <a href=\"https://codepen.io/llun/pen/RwJoRpm\">\n  Scroll event</a> by Maythee Anegboonlap (<a href=\"https://codepen.io/llun\">@llun</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n\n<p>ข้อเสียของวิธีนี้คือ scroll event ยิงออกมาบ่อยมาก ถ้า event handler เขียนไม่ดีหรือ throttle จำนวน event ที่รับมาจะมีผลกับ UI หน้าเว็บทันที ตั้งแต่เวลาเลื่อน list จะเห็นว่า list scroll แล้วกระตุก หรือไม่ก็ทำให้หน้าเว็บกิน battery มากขึ้น ทางแก้ที่ทำกันก็คือเอาส่วนที่ทำงานหนักเวลา scroll ไปใส่ใน throttle function ซะ ไม่ว่าจะเป็น <code>requestAnimationFrame</code> หรือ <code>_.throttle</code> ใน lodash</p>\n<p>แต่ปีนี้ 2022 แล้ว browser ทุกเจ้ามี API อีกตัวที่ออกมาเพื่อแก้ปัญหานี้โดยเฉพาะ นั่นคือ <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\" target=\"_blank\">Intersection Observer API</a> ที่ไม่ยิง event มาที่ฟังก์ชั่นตลอดหรือถี่อีกต่อไปแล้ว แต่ยิงมาเฉพาะตอนที่ DOM ที่เรา monitor ไว้โผล่มาเมื่อไหร่เท่านั้น จะให้โผล่มา 25% 50% หรือทั้งหมดแล้วเรียก function เพื่อโหลดข้อมูลหน้าถัดไปก็ได้</p>\n\n  See the Pen <a href=\"https://codepen.io/llun/pen/vYryXLL\">\n  Intersection Observer</a> by Maythee Anegboonlap (<a href=\"https://codepen.io/llun\">@llun</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n\n<p>ข้อดีของวิธีนี้คือไม่ต้อง Throttle, กำหนดเอาได้เลยว่าเลื่อนถึง element ไหนแล้วโหลด จะเลื่อนจนถึง element สุดท้าย หรือกลางๆ ก็ได้ ไม่ต้องคำนวนจากความสูงเหมือนแต่ก่อน และ browser ก็รองรับหมดแล้ว (คงไม่มีใครใช้ Internet Explorer แล้วมั้งปีนี้)</p>\n","author":"Maythee Anegboonlap"},{"title":"Gallery Page","link":"https://www.llun.me/posts/2022-11-06-gallery-page","date":1667732401000,"content":"<p>หลังจากเอารูปที่ปั่นจักรยานลงหน้าปั่นเสร็จ ก็คิดว่าไหนๆ ก็ย้ายออกจาก Flickr แล้วทำหน้าที่ใช้แทน Flickr ด้วยเลยดีกว่า เพราะรูปทั้งหมดก็อยู่ใน iCloud เกือบหมดแล้วด้วย เหลือแค่บางช่วงที่ตอน Import รูปจาก Flickr รอบที่แล้วลง Photos app แล้ว error ไว้ถ้าเอาลงใหม่ได้ทั้งหมดก็คงได้เอา Album ทั้งหมดใน Flickr มาลงด้วย</p>\n<p>ตอนนี้หน้า <a href=\"https://www.llun.me/gallery/\" target=\"_blank\">Gallery</a> ก็คิดว่าเสร็จแล้ว มีรูปของปีนี้เกือบทั้งหมดแล้วด้วย (ยกเว้นรูปปั่นที่แยกไปไว้หน้าปั่นทั้งหมด)</p>\n<figure><a href=\"https://www.llun.me/gallery/\" target=\"_blank\"><img src=\"https://www.llun.me/posts/2022-11-06-gallery-page/gallery.png\" alt /></a><figcaption>หน้า Gallery ที่น่าจะเสร็จหละ</figcaption></figure>\n<p>ปัญหาเดียวที่เจอตอนนี้คือ Apple มี Throttle เวลาโหลดรูปบ่อยๆ แต่เท่าที่ลองมาก็เจอแค่ครั้ง\nเดียวตอนที่แก้หน้า Gallery แล้วโหลดรูปทั้ง Gallery หลายรอบติดต่อกัน</p>\n<figure><img src=\"https://www.llun.me/posts/2022-11-06-gallery-page/throttle.png\" alt /><figcaption>520 Request Throttled พึ่งเคยเจอ status code นี้จาก Apple นี่แหละ</figcaption></figure>\n<p>ต่อจากนี้กำลังคิดว่า จริงๆ แล้วไม่ต้องทำ API พิเศษแล้ว host ไว้ใน Vercel ก็ได้เพราะรูปที่ใส่ไว้ใน Apple มีระยะเวลาตั้งวันนึงกว่าที่ link จะหมดอายุ ถ้าใช้ Github Cron คอยดึง json มาเก็บไว้แล้ว serve แบบ static ทั้งหมดก็น่าจะได้ (ยกเว้นว่า Apple จะเปลี่ยนเอา CORS ใส่ใน link รูปด้วยก็จบกัน) เดี๋ยวเอารูปทั้งหมดที่อยู่ใน Flickr มาใส่ใน Gallery คิดว่าเดี๋ยวจะลองทำ Github Actions อีกอันเล่นๆ ไว้ทำ Gallery จาก Apple Shared Album หละ</p>\n","author":"Maythee Anegboonlap"},{"title":"Container Query & overscroll-behavior","link":"https://www.llun.me/posts/dev/2022-11-04-container-query-and-overscroll-behaviour","date":1667589079000,"content":"<p>อาทิตย์นี้เจอ css property ที่น่าสนใจสองอย่าง <code>@container</code> กับ <code>overscroll-behavior</code> ทั้งสองอันรองรับใน iOS แล้วด้วย แต่อาจจะต้องรออีกหน่อยเพราะ iOS16 พึ่งออก ถ้าใช้ CSS สองอย่างนี้คนใช้ iOS ส่วนใหญ่อาจจะยังไม่เห็น แต่คนใช้ iPhone ส่วนใหญ่ก็อัพเกรดกันเร็วอยู่แล้ว</p>\n<h2>Container Query <a href=\"#container-query\" target=\"_blank\">#</a></h2>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries\" target=\"_blank\">@container</a> ทำงานคล้ายกับ Media Query ที่ใช้กันมานาน แต่ต่างจาก Media Query คือแทนที่จะจะอิงกับขนาดของ Window และ Media type (screen, print). Container Query อิงกับขนาดของ parent container แทน.</p>\n<p>ที่สนใจเพราะ Container Query นี่ทำให้เอามาใช้กับ Web ที่แบ่งหน้าเป็นส่วนๆ เช่นด้านซ้ายเป็น Navigation แล้วด้านขวาเป็น Content ได้ง่ายกว่า Media Query มากไม่ต้องคอยคิดว่า หน้าจอขนาดนี้อะไรจะกระทบบ้างจากกฏไม่กี่อันอีกต่อไป แต่ไปขึ้นกับขนาดของ Parent Container แทน</p>\n\n  See the Pen <a href=\"https://codepen.io/llun/pen/RwJRNWZ\">\n  Container Query</a> by Maythee Anegboonlap (<a href=\"https://codepen.io/llun\">@llun</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n\n<p>จาก code ด้านบนถ้า resize หน้าจอลงเรื่อยๆ จน dom conversations ย่อลงจนถึงขนาดที่กำหนด แถบเวลาจะเลื่อนลงมา</p>\n<h2>overscroll-behavior <a href=\"#overscroll-behavior\" target=\"_blank\">#</a></h2>\n<p>อีก property ที่พึ่งรู้จักแต่อยู่ใน css มาได้ซักพักแล้ว <code>overscroll-behavior</code> ที่ไว้แก้ปัญหาเรื่อง overflow ที่เวลา scroll content ไปจนสุดแล้ว browser จะพยายามเลื่อนต่อถ้าหน้านั้นมี scroll ข้างนอกด้วย</p>\n\n  See the Pen <a href=\"https://codepen.io/llun/pen/VwdjEOR\">\n  Untitled</a> by Maythee Anegboonlap (<a href=\"https://codepen.io/llun\">@llun</a>)\n  on <a href=\"https://codepen.io\">CodePen</a>.\n\n<p>จาก code ด้านบนถ้าไม่ใส่ <code>overscroll-behavior</code> หลังจาก scroll menu ไปจนสุดแล้ว frame ด้านนอกจะ scroll ต่อ แต่พอใช้ <code>overscroll-behavior: contain</code> แล้ว scroll จะหยุดแค่ใน navigations</p>\n<p><code>overscroll-behavior</code> ตั้งได้สามอย่างคือ</p>\n<ol>\n<li><code>auto</code> ที่ให้ scroll ต่อถ้า frame ด้านนอก scroll ได้ด้วย</li>\n<li><code>contain</code> ให้ scroll แล้วหยุดใน dom นั้นไม่สนใจ scroll ด้านนอก แต่ถ้าเว็บ load ใน iframe แล้วหน้านอก iframe มีแถบให้เลื่อนก็จะ scroll ต่อนอก iframe</li>\n<li><code>none</code> ให้ scroll แล้วหยุดใน dom และไม่ส่งไปนอก iframe ด้วย</li>\n</ol>\n<h2>Browser supported <a href=\"#browser-supported\" target=\"_blank\">#</a></h2>\n<p>Container Query ยังค่อนข้างใหม่อยู่ Browser ที่รองรับหลักๆ มี Chrome กับ Safari ล่าสุด แต่ Firefox ยังไม่รองรับ ส่วน <code>overscroll-behavior</code> นี่รองรับหมดแล้ว</p>\n<p>หลังจากไม่ได้ตาม CSS มานานหลังจากเจอสองอย่างนี้ก็รู้สึกว่า CSS เดี๋ยวนี้ใช้ง่ายขึ้นมาก ยังไม่ต้องพูดถึง grid layout ที่ทำให้ทำตารางที่คุมความกว้างและความสูงง่ายขึ้นมาก จนรู้สึกกลับมาทำเว็บสนุกอีกครั้ง</p>\n","author":"Maythee Anegboonlap"},{"title":"Next.JS 13","link":"https://www.llun.me/posts/dev/2022-10-26-nextjs13","date":1666803421000,"content":"<p>Next.JS Conference วันอังคารที่ผ่านมาสิ่งที่ออกมาด้วยคือ <a href=\"https://nextjs.org/blog/next-13\" target=\"_blank\">Next.JS 13</a> มีสองอย่างที่ออกมาน่าสนใจคือ <a href=\"https://nextjs.org/blog/layouts-rfc\" target=\"_blank\">Layout RFC</a> ที่มาเป็น beta ให้สร้าง app directory ได้แล้ว และ bundle ตัวใหม่ที่ชื่อว่า <a href=\"https://vercel.com/blog/turbopack\" target=\"_blank\">Turbopack</a></p>\n<h2>Layout RFC <a href=\"#layout-rfc\" target=\"_blank\">#</a></h2>\n<p>Layout นี่เป็นสิ่งที่ Next.JS ออกมาเพื่อแก้ปัญหาเรื่อง share page structure ที่ปัจจุบัน ท่าที่ทำกันคือเอา structure พวกนั้นไปใส่ไว้ใน file พิเศษที่ชื่อว่า <code>_app.tsx</code> หรือ <code>_document.tsx</code> ซึ่งก็ทำได้ไม่หมดด้วย เพราะมันรองรับแค่ root page</p>\n<p>แต่ Layout ใหม่คือหน้า page ทุกหน้าจะเป็น directory ทั้งหมดและมี Layout file ของตัวเองที่ซ้อนกันได้ ไม่ต้องทำถ้าที่แยกส่วน Layout เป็น component ที่ครอบ page component อีกทีแล้ว</p>\n<h2>App Directory <a href=\"#app-directory\" target=\"_blank\">#</a></h2>\n<p>แต่นอกจาก Layout RFC แล้ว App directory ยังทำอีกอย่างคือแยกระหว่าง server component และ client component ที่แต่ก่อนอยู่รวมกัน แล้วแยกแค่ส่วน load data ไว้ที่ method พิเศษที่ชื่อว่า <code>getStaticProps</code> หรือ <code>getServerSideProps</code> และ effect ทั้งหลายที่ทำงานเฉพาะฝั่ง browser เท่านั้น</p>\n<p>Server component คือแยกไปเลยว่า structure ทั้งหมด render จาก server และทำงานเกี่ยวกับ render และดึงข้อมูลเอามาใส่ structure เท่านั้น ไม่มีส่วน client behaviour ที่อยู่ใน <code>useEffect</code> อีกต่อไป แต่ถ้าจะเอา component บางส่วนมาใช้ฝั่ง client ใน browser ด้วยก็ประกาศไปบนหัวไฟล์ว่า <code>'use client'</code> ข้อดีที่ Next.JS โม้มาคือ JS ไฟล์จะเล็กลง แล้วหน้า page น่าจะโหลดเร็วขึ้น</p>\n<p>นอกจากแยก server component แล้วอีกอย่างที่เปลี่ยนไปคือ server component จะไม่มี <code>getStaticProps</code> หรือ <code>getServerSideProps</code> แล้ว ให้ใช้ <code>fetch</code> <a href=\"https://beta.nextjs.org/docs/data-fetching/fetching\" target=\"_blank\">ที่มี parameter พิเศษไปให้หมด</a></p>\n<p>แต่ถ้าอยากดึงข้อมูลใน client component, React ก็มี hook ใหม่ให้ใช้! เรียกว่า <code>use</code> <a href=\"https://beta.nextjs.org/docs/data-fetching/fetching#example-fetch-and-use-in-client-components\" target=\"_blank\">แบบไม่มีอะไรต่อท้าย</a> ข้อดีที่เห็นคือต่อไปไม่ต้องทำท่า <code>useState</code> แล้วใช้ <code>useEffect</code> เพื่อดึงข้อมูลแล้วจัดใส่ state แล้ว use fetch แล้วเอาตัวแปรมาใช้ตรงๆ ได้เลย</p>\n<h2>Upgrade <a href=\"#upgrade\" target=\"_blank\">#</a></h2>\n<p>หลังจาก Conference เมื่อคืน ก็ลองกับ blog ตัวเองก่อนเลย พบว่าไม่มีอะไรพัง ต้อง run codemod แก้ <a href=\"https://beta.nextjs.org/docs/upgrade-guide/codemods#remove-a-tags-from-link-components-next-link\" target=\"_blank\">link</a> นิดหน่อย แต่ก็ไม่เจอปัญหาอะไร (แต่ถ้าใช้ <a href=\"https://beta.nextjs.org/docs/upgrade-guide/codemods#rename-nextimage-imports-next-image-to-legacy-image\" target=\"_blank\">next/image</a> อาจปวดหัวหน่อย)</p>\n<p>ตอนเช้าเลยมาลองกับ Project ที่ตัวเองดูแลอยู่ ก็ไม่มีอะไรพังอีก ทุกอย่างทำงานได้ปกติดีมาก จนกระทั่งไปดูว่า load เป็นยังไง พบว่า response time เพิ่มขึ้นมาก แถม ram ใช้เยอะเกินกว่าเท่าตัว เรียกว่าพัง แถมพังแบบเงียบๆ ด้วยเพราะไม่มีอะไร error ขึ้นมาเลยแต่ resource ใช้เพิ่มเยอะจนต้อง scale cluster เพิ่ม</p>\n<p>สุดท้ายก็เลย rollback กลับ 12.3 ก่อนแล้วรอ 13 mature กว่านี้ก่อน (อาจจะรอจน app directory หลุด beta) ค่อยลองอีกที</p>\n","author":"Maythee Anegboonlap"},{"title":"iCloud Photos shared album","link":"https://www.llun.me/posts/dev/2022-10-25-iCloud-photos-shared-album","date":1666721558000,"content":"<p>สุดสัปดาห์ที่ผ่านมาลองเปิด Shared Album ใน Apple Photos app แล้วเจอว่ามี Public Website ให้เอา link ไปแจกให้คนอื่นเข้ามาดูรูปได้ ลองกดดูว่ามันดึงรูปมายังไงก็เจอว่า Apple มี API สองอันไว้ดึงรูป เลยได้ idea ว่าจะเอารูปใน iCloud มาใส่ไว้ในเว็บตัวเอง</p>\n<p>API ที่ Apple ใช้มีด้วยกันสองอัน <code>webstream</code> กับ <code>webassetsurls</code></p>\n<h2>Token &amp; API Cluster <a href=\"#token-%26-api-cluster\" target=\"_blank\">#</a></h2>\n<p>ก่อนที่จะเรียก API ได้ต้องรู้สองอย่างคือ token และ API cluster เพราะ URL ของ API มีหน้าตาประมาณนี้ <code>https://p[cluster-id]-sharedstreams.icloud.com/[token]/sharedstreams/webstream</code></p>\n<p>Token ได้มาจาก URL ที่ Apple ให้มาหลังจาก enable public website เช่น <code>https://www.icloud.com/sharedalbum/#B12GfnH8tC0ZuK</code> Token ของ album คือ <code>B12GfnH8tC0ZuK</code></p>\n<figure><a href=\"shared-album-setting.png\" target=\"_blank\"><img src=\"https://www.llun.me/posts/dev/2022-10-25-iCloud-photos-shared-album/shared-album-setting-small.png\" alt /></a><figcaption>Album token จาก Shared Album settings ใน Photos App</figcaption></figure>\n<p>ใน Token นี้มีรายละเอียดของ cluster ซ่อนอยู่โดยแกะจาก token 3 ตัวแรก จาก Token ด้านบนถ้าตัวอักษรแรกเป็น <code>A</code> cluster id คือตัวอักษรที่สองจาก token ด้านบนก็คือ <code>1</code> แล้ว id ใน URL ให้ pad 0 เข้าไปด้านเป็น <code>01</code> แต่ถ้าตัวอักษรแรกเป็น <code>B</code> ต้องแกะเพิ่มนิดหน่อยโดยเอาตัวอักษรที่ 2 กับ 3 มาถอดเช่น token ด้านบน cluster id อยู่ใน <code>12</code> เอามาถอดด้วย Base62 จะได้ cluster ID ออกมาเป็น <code>64</code> (ถ้าเป็นเลขหลักเดียวทำเช่นเดียวกับ <code>A</code> คือ pad 0) URL ที่ใช้เรียก API เต็มๆ ก็จะเป็น <code>https://p64-sharedstreams.icloud.com/B12GfnH8tC0ZuK/sharedstreams/webstream</code></p>\n<h2>webstream API <a href=\"#webstream-api\" target=\"_blank\">#</a></h2>\n<p>Webstream API, <code>sharedstreams/webstream</code> เป็น API ไว้เรียกดูรายละเอียดของ Album ว่ามีรูปอะไรบ้างแต่ละรูปมีความละเอียดเท่าไหร่ หรือวิดีโอมีความละเอียดเท่าไหร่บ้างที่ดึงมาดูได้ เรียกโดยส่ง Post call ไปที่ <code>sharedstreams/webstream</code> API เช่น</p>\n<pre><code>curl 'https://p64-sharedstreams.icloud.com/B12GfnH8tC0ZuK/sharedstreams/webstream' \\\n  --data-raw '{\"streamCtag\":null}' \\\n  --compressed\n</code></pre>\n<p><code>streamCtag</code> เป็น pagination id เวลา album มีรูปเยอะมาก โดยเอาจาก response ที่คืนมาจาก API ที่หน้าตาประมาณนี้</p>\n<pre><code>{\n  \"userLastName\": \"Anegboonlap\",\n  \"streamCtag\": \"FT=-@RU=05cd8aa0-51d9-4671-bfa5-e10cdf277e04@S=16559\",\n  \"itemsReturned\": \"0\",\n  \"locations\": {},\n  \"userFirstName\": \"Maythee\",\n  \"streamName\": \"Sample\",\n  \"photos\": [\n    {\n      \"batchGuid\": \"ACEEC3D1-D3AF-4A21-809B-6E3A043606D8\",\n      \"derivatives\": {\n        \"342\": {\n          \"fileSize\": \"43050\",\n          \"checksum\": \"01f4ef240d7581f208b76b2498789ba759bee245be\",\n          \"width\": \"257\",\n          \"height\": \"342\"\n        },\n        \"2049\": {\n          \"fileSize\": \"985681\",\n          \"checksum\": \"010ca39ab9acf31d14f853ea47a1c110a425f99f27\",\n          \"width\": \"1537\",\n          \"height\": \"2049\"\n        }\n      },\n      \"contributorLastName\": \"Anegboonlap\",\n      \"batchDateCreated\": \"2022-10-25T17:13:49Z\",\n      \"dateCreated\": \"2016-11-03T12:49:49Z\",\n      \"contributorFirstName\": \"Maythee\",\n      \"photoGuid\": \"2C50FDDE-A9D8-4D28-B99B-4265CF2F1D8A\",\n      \"contributorFullName\": \"Maythee Anegboonlap\",\n      \"width\": \"1537\",\n      \"caption\": \"\",\n      \"height\": \"2049\"\n    },\n\n  ],\n  \"items\": {}\n}\n</code></pre>\n<h2>webassetsurls <a href=\"#webassetsurls\" target=\"_blank\">#</a></h2>\n<p>หลังจากได้ <code>photoGuid</code> จาก <code>webstream</code> มาแล้วจะเอา URL รูปไว้สำหรับใส่ img หรือ video source tag ต้องใช้ <code>webassetsurls</code> เช่นเดียวกับ <code>webstream</code> API นี้เป็น POST call เช่นเดียวกัน</p>\n<p>Post body ที่ต้องส่งไปก็คือ <code>photoGuid</code> ที่ได้มาแล้วต้องการ URL รูปกลับมา เช่น</p>\n<pre><code>curl 'https://p64-sharedstreams.icloud.com/B12GfnH8tC0ZuK/sharedstreams/webasseturls' \\\n  --data-raw '{\"photoGuids\":[\"2C50FDDE-A9D8-4D28-B99B-4265CF2F1D8A\"]}' \\\n  --compressed\n</code></pre>\n<p>Response ที่ได้กลับมาจะเป็น map ระหว่าง checksum ของรูปกับ url</p>\n<pre><code>{\n  \"locations\": {\n    \"cvws.icloud-content.com\": {\n      \"scheme\": \"https\",\n      \"hosts\": [\"cvws.icloud-content.com\"]\n    }\n  },\n  \"items\": {\n    \"01f4ef240d7581f208b76b2498789ba759bee245be\": {\n      \"url_expiry\": \"2022-10-25T20:24:35Z\",\n      \"url_location\": \"cvws.icloud-content.com\",\n      \"url_path\": \"/S/AfTvJA11gfIIt2skmHibp1m-4kW-/PB030703.JPG?o=AqAFUL40Bn0KCw60prfUdSWcesRlPbNNjkXjivIBuF1M&amp;v=1&amp;z=https%3A%2F%2Fp64-content.icloud.com%3A443&amp;x=1&amp;a=CAogF8lO2X9BoWWM7YKIEtInjsSSZKRvKSXXkIpAFoflsrwSZRC_5rKBwTAYv_3FhsEwIgEAUgS-4kW-aiWzPwvbIdF-8fxta-bfw_DwKbBU-F0LVEwU2_NU8wE9husrBWsmciVQwi_Si9bGqbIi9Y_EupbNdAvIPlFWslPObm19Oh120GcygDeT&amp;e=1666729475&amp;r=7dc2183b-3f0f-47ef-a03a-ab4c76d397a6-13&amp;s=64dLJRQ4LomOTK0BykgYZ7QyUf4\"\n    }\n  }\n}\n</code></pre>\n<p>เวลาเอาไปใช้คือเอา <code>url_locations</code> รวมกับ <code>scheme</code> ด้านบน และ <code>url_path</code> ก็จะได้ url รูปภาพที่เอาไปใส่ใน tag ได้</p>\n<h2>Limitation <a href=\"#limitation\" target=\"_blank\">#</a></h2>\n<p>ข้อจำกัดของ Shared Album Apple มีอย่างเดียวคือขนาดรูปหรือ Video ที่ไม่ได้ออกมาตามที่เก็บไว้ใน iCloud <a href=\"https://support.apple.com/en-us/HT202786\" target=\"_blank\">แต่เป็นรูปหรือ video ที่ย่อมาแล้ว</a></p>\n<p>ถ้าเป็นรูปก็จะถูกย่อลงมาเหลือ 2048px ส่วน video ถ้าถ่ายมามากกว่า 720p ก็จะเหลือ 720p ส่วนตัวไม่มีปัญหาอะไรกับข้อจำกัดนี้ แต่ถ้าเทียบกับ Google Photos แล้วข้อจำกัดก็เยอะกว่ามาก แถมถ้าเทียบกับ Google ที่มีรายละเอียดของ API ชัดเจนว่าให้เล่นยังไง แทนที่จะต้องแกะเอาเอง ถ้าไม่ได้ใช้มือถือ Google แล้วอยากเอาภาพมาแปะในเว็บก็คงไม่ย้ายมา iCloud</p>\n<h2>Gallery <a href=\"#gallery\" target=\"_blank\">#</a></h2>\n<p>ตอนนี้มีอยู่สองหน้าที่ตอนนี้แปะภาพจาก iCloud ไว้คือหน้าที่เก็บรายละเอียดปั่นจักรยานไว้ทั้ง <a href=\"https://www.llun.me/tags/ride/netherlands/\" target=\"_blank\">Netherlands</a> และ <a href=\"https://www.llun.me/tags/ride/singapore/\" target=\"_blank\">Singapore</a> ยังทำไม่เสร็จดีเท่าไหร่ แต่ถ้าอยากดูตัวอย่างก็ลองไปดูได้ที่ URL ด้านบน ส่วนตัวอย่าง code แบบ typescript อยู่นี่ <a href=\"https://github.com/llun/blog/blob/master/libs/apple/webstream.ts\" target=\"_blank\">https://github.com/llun/blog/blob/master/libs/apple/webstream.ts</a></p>\n","author":"Maythee Anegboonlap"}]}