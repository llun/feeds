{"title":"chai.js deep equal","link":"https://www.llun.me/posts/dev/2014-01-17-chaijs-deep-equal/","date":1389916800000,"content":"\n      \n        <p>เห็น <a href=\"https://twitter.com/visibletrap/status/424001874178473986\" target=\"_blank\" rel=\"noopener\">tweet @visibletrap</a> เลยกระตุ้นให้อยากเขียนเรื่องนี้ขึ้นมาเสียหน่อย เพราะเป็นอะไรที่คล้ายกันมากในโลก Javascript</p>\n<p>Spec framework ที่ผมใช้ตลอดช่วงหลังคือ Mocha แต่มันก็เป็นแค่ตัวรันครอบเท่านั้น Assertion framework ภายในกลับไม่ได้ใช้อะไรของ Mocha เลยแต่เป็น Chai.js ซึ่งมีอะไรให้เล่นเยอะแยะมากมายกว่า แต่วันนี้ขอเขียนถึงแค่ Feature เดียวคือ deep equal เพราะใช้บ่อย</p>\n<p>เวลาทำอะไรใน Javascript สิ่งที่ได้ออกมาส่วนใหญ่ก็จะออกมาเป็น Object หรือ JSON ซึ่งเวลาจะเทียบกันด้วย Assertion framework ปกติคือ เทียบทีละ property</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Target'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />  <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#doSomething'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br />    <span class=\"token function\">assertEqual</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>property1<span class=\"token punctuation\">,</span> <span class=\"token string\">'expect value1'</span><span class=\"token punctuation\">)</span><br />    <span class=\"token function\">assertEqual</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>property2<span class=\"token punctuation\">,</span> <span class=\"token string\">'expect value2'</span><span class=\"token punctuation\">)</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>ซึ่งถ้ามี property น้อยๆ หรือ object ไม่ซับซ้อนก็พอไหว แต่ถ้ามี array ซ้อนภายในก็เริ่มจะยุ่งยากหละ Chai.js มีตัวช่วยเรียกว่า deep เพื่อเทียบสิ่งที่อยู่ภายในให้ทั้งหมด จากด้านบนถ้าเทียบด้วย deep ก็จะกลายเป็น</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Target'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />  <span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#doSomething'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><br />    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">doSomething</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><br />    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>deep<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><br />      property1<span class=\"token operator\">:</span> <span class=\"token string\">'expect value1'</span><span class=\"token punctuation\">,</span><br />      property2<span class=\"token operator\">:</span> <span class=\"token string\">'expect value2'</span><br />    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br />  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><br /><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre>\n<p>เขียนเทียบน้อยลงและเห็นหน้าตา output ที่ spec เลย! ดีกว่าเยอะ</p>\n\n        <p>\n          <a href=\"mailto:comment@llun.me?subject=Common on post https://www.llun.me/posts/dev/2014-01-17-chaijs-deep-equal/\">Send a comment</a>\n        </p>\n      \n    ","author":"","siteTitle":"@llun story","siteHash":"e492a4c5a091b6624e5872d8d003bc73eb1166cc8f88db58c44e1f8dfb9c7252","entryHash":"0f791e2dcc166b0e7e0902ce6818cfdd7019717444645159aa7f57ab3e97fbe2","category":"Me"}