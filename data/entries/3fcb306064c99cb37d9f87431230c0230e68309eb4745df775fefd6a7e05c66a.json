{"title":"URI matrix parameter","link":"https://www.llun.me/posts/dev/2021-11-11-uri-matrix-parameter","date":1636588800000,"content":"<p>สัปดาห์ที่ผ่านมาระบบที่เข้ามาดูแลมี pentester มาทดสอบแล้วเจอ bug นึงที่น่าสนใจ\nคือใน web application ทั่วไป ก็จะมีระบบ route ที่ map เข้ากับ function\nหรือ method ที่คอยทำงานแล้วส่งผลลัพธ์ออกมาให้ และ framework ทั่วไปก็จะมีสิ่ง\nที่เรียกว่า middleware ให้เขียน filter เพื่อกันหรือแปลง input/output\nระหว่างทาง</p>\n<p>วิธีที่ framework อื่นที่รู้จักทำปกติก็จะ map router กันง่ายๆ เช่น express.js</p>\n<pre><code>app.get('/resource/subresource', middleware1, middleware2, handle)\n</code></pre>\n<p>หรือถ้าจะมีพิเศษหน่อยก็อาจจะมี variable capture ใน path หรือ ใช้ regex\nเพื่อ match path กับ resource</p>\n<p>ระบบที่เข้ามาดูใช้ Spring framework ก็มีโครงสร้างคล้ายกันคือ มี path matcher,\nmiddleware (Filter) และ handle (Servlet)</p>\n<p>ปัญหาคือ filter ที่ check path แล้วทำอะไรซักอย่างก่อนจะส่งไป resource ดัน\nทำงานพลาด เรียก handle แบบตรงๆ แทนที่จะทำอะไรบางอย่างก่อนจะเรียก ลอง\nดู code ก็เหมือนจะไม่มีอะไร</p>\n<pre><code>func filter(req, res, chain) {\n  val path = req.path.value()\n  if (path.startsWith('/resourceA/subResourceB')) {\n    doSomething()\n  }\n\n  // Continue\n  chain.doFilter(req, res)\n}\n</code></pre>\n<p>แต่สิ่งที่เกิดขึ้นคือเวลาเรียก url <code>/resourceA;ver=1/subResourceB</code> Spring\nกลับเรียกไปที่ subResourceB handle แต่ไม่เรียก <code>doSomething()</code> ที่ควรจะเรียก\nปัญหาคือจาก url นี้ปกติจะ assume ว่า framework ควรจะ return 404 สิเพราะ</p>\n<pre><code>/resourceA;ver=1/subResourceB\n</code></pre>\n<p>ไม่ควรจะ match กับ</p>\n<pre><code>/resourceA/subResourceB\n</code></pre>\n<p>เลยลองไปถามใน Spring framework github เลยพบว่า Spring framework\nรองรับสิ่งที่เรียกว่า <a href=\"https://www.w3.org/DesignIssues/MatrixURIs.html\" target=\"_blank\">URI matrix parameter</a>\nตาม description ใน <a href=\"https://datatracker.ietf.org/doc/html/rfc3986#section-3.3\" target=\"_blank\">rfc3986 section 3.3</a> จาก URL ด้านบน</p>\n<pre><code>/resourceA;ver=1/subResourceB\n</code></pre>\n<p><code>;ver=1</code> คือ matrix paramenter หรือ <a href=\"https://docs.spring.io/spring-framework/docs/current/reference/html/web-reactive.html#webflux-ann-matrix-variables\" target=\"_blank\">Matrix Variables</a>\nใน Spring Framework โดยแต่ละส่วนของ path สามารถใส่ parameter ได้มากกว่าหนึ่งด้วย\nเช่น <code>/api;v=1/parent;ts=1636634868;c=#fff/resource</code> ซึ่งโดยทั่วไป web framework\nอื่นไม่ support ปัญาหาคือ จาก url ด้านบนถ้าใช้ String.startsWith match จะไม่ตรงกับ url\nที่ request เข้ามาแน่นอน วิธีแก้ก็ง่ายๆ แทนที่จะใช้ String.startsWith Spring Framework มี\n<a href=\"https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/util/pattern/PathPattern.html\" target=\"_blank\">PathPattern</a> ให้ใช้ แก้จาก String.startsWith\nด้านบนเป็น</p>\n<pre><code>PathPatternParser().parse(\"/resourceA/subResourceB\").matchStartOfPath(req.path)\n</code></pre>\n<p>ก็สามารถตรวจ path ที่ต้องการได้แล้ว แต่ส่วนตัวคิดว่าปัญหานี้น่าจะแก้ได้ดีกว่านี้ถ้าสามารถเอา\nFilter ใส่ที่ path เหมือนอย่าง framework อื่นได้อย่าง express.js แต่สิ่งที่หาได้ใกล้เคียง\nสุดคือ<a href=\"https://www.baeldung.com/spring-boot-add-filter\" target=\"_blank\">ท่านี้</a> ซึ่งก็ไม่ดีขึ้นเท่าไหร่\nตอนนี้ก็คงเก็บวิธีนี้ไว้ก่อน</p>\n","author":"Maythee Anegboonlap","siteTitle":"@llun story","siteHash":"e492a4c5a091b6624e5872d8d003bc73eb1166cc8f88db58c44e1f8dfb9c7252","entryHash":"3fcb306064c99cb37d9f87431230c0230e68309eb4745df775fefd6a7e05c66a","category":"Me"}